Evolution of the SPMP

Description:

> This subsection of the SPMP shall specify the plans for producing both scheduled and unscheduled updates to the SPMP. Methods of disseminating the updates shall be specified. This subsection shall also specify the mechanisms used to place the initial version of the SPMP under change control and to control subsequent changes to the SPMP.

Content:

The SPMP will only be changed by the Project Lead. 

<Mention how the first version will be made.> 

The first version of this document, as every subsequent version, will be made in parts. Every party that composes the SPMP will be created and modified on its own, as an individual sub-document. When changes are finalized, all the parts will be compiled into one document and given a version number based on the previous version document's number; said number will start at "1" and progress incrementally. (The first version number will be "1"; this number will increase to "2" and so on.) Said version number will be prefaced in the name of the file by the letter "r". (As per the word "revision".) Therefore, the first version of the SPMP will be named "Software Program Management Plan r1.pdf", and the following versions will only have it's version number increase.

All components of this project related to the creation of the SPMP will be located in the project's GitHub version control system. (https://github.com/CherimaeNemeta/PlasmaGraph) A section of the repository will be dedicated only to the SPMP's fragments (specs/SPMP/Partes Incompletas/), and another will be for completed documents. (specs/Documentos Completos/SPMP/) Document fragments will be divided by the section they are located in (Folders labelled Sections 1 through 5 in said subdirectory.), and completed documents will be divided by version. (Folders labelled either "Current Version" or "Previous Versions" in said subdirectory.)

All documents, reference materials, meeting notes, data sets, and project code will be located on the project's GitHub repository. (https://github.com/CherimaeNemeta/PlasmaGraph) Said system will serve as a version control system to manage the myriad files that the project will require.

----------
This document, as every other document regarding the "PlasmaGraph" project for the PUPR Plasma Lab, as well as the program itself, will be located on the project's GitHub account for the express purpose of editing and retrieving it. The Dropbox system will serve as partial version control when combined with the naming system in place for these documents, explained below. Regular weekly compilations of the newest document parts will be done so as to keep the document updated; these parts can be written or updated as needed. Upon release of the initial project (considered to be version 1.0 of the PlasmaGraph program), the document will be presentable to any individual that requests it via a direct link to the document. Before then, the document will not be presented to any external agents.

The version control scheme is composed of two parts: the Dropbox account and the naming scheme used for each file in the account. The Dropbox account is organized first by document, by person, and by document section. (For example, section 1.2 of the SPMP will have its own set of files with the unique naming scheme.) Only the newest document sections will be located in the folder marked with the project member's name; all other files regarding a certain section will be held in a "Previous Versions" subfolder in that folder. The naming scheme presents the user with the following data:

1) A number from 0 to 3, specifying the progress towards release candidacy; 0 stands for pre-alpha or incomplete and unusable status, 1 for alpha or usable but informationally-incomplete status, 2 for beta or informationally-complete but unpolished status, and 3 for release candidate or informationally-complete and polished status. A dash follows this number.
2) The date of the creation of the document. Date is provided with dashes between month, day, and year (in that order).

This way, each file can be easily analysed in date order.

[Explain how to shift between each of the versions. Also explain how versions can be skipped.]